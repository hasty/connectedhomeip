<?xml version="1.0"?>
<configurator>
  <bitmap name="WiFiSecurityBitmap" type="bitmap8">
    <cluster code="0x0031"/>
    <field mask="0x1" name="Unencrypted"/>
    <field mask="0x2" name="WEP"/>
    <field mask="0x4" name="WPA-PERSONAL"/>
    <field mask="0x8" name="WPA2-PERSONAL"/>
    <field mask="0x10" name="WPA3-PERSONAL"/>
  </bitmap>
  <bitmap apiMaturity="provisional" name="ThreadCapabilitiesBitmap" type="bitmap16">
    <cluster code="0x0031"/>
    <field mask="0x1" name="IsBorderRouterCapable"/>
    <field mask="0x2" name="IsRouterCapable"/>
    <field mask="0x4" name="IsSleepyEndDeviceCapable"/>
    <field mask="0x8" name="IsFullThreadDevice"/>
    <field mask="0x10" name="IsSynchronizedSleepyEndDeviceCapable"/>
  </bitmap>
  <bitmap name="Feature" type="bitmap32">
    <cluster code="0x0031"/>
    <field mask="0x1" name="WiFiNetworkInterface"/>
    <field mask="0x2" name="ThreadNetworkInterface"/>
    <field mask="0x4" name="EthernetNetworkInterface"/>
  </bitmap>
  <cluster>
    <attribute code="0x0000" define="MAX_NETWORKS" optional="false" side="server" type="int8u" writable="false">
      <access op="read" privilege="administer"/>
      <description>MaxNetworks</description>
    </attribute>
    <attribute code="0x0001" define="NETWORKS" entryType="NetworkInfoStruct" optional="false" side="server" type="ARRAY" writable="false">
      <access op="read" privilege="administer"/>
      <description>Networks</description>
    </attribute>
    <attribute code="0x0002" define="SCAN_MAX_TIME_SECONDS" optional="true" side="server" type="int8u" writable="false">ScanMaxTimeSeconds</attribute>
    <attribute code="0x0003" define="CONNECT_MAX_TIME_SECONDS" optional="true" side="server" type="int8u" writable="false">ConnectMaxTimeSeconds</attribute>
    <attribute code="0x0004" define="INTERFACE_ENABLED" optional="false" side="server" type="boolean" writable="true">
      <access op="read" privilege="view"/>
      <access op="write" privilege="administer"/>
      <description>InterfaceEnabled</description>
    </attribute>
    <attribute code="0x0005" define="LAST_NETWORKING_STATUS" isNullable="true" optional="false" side="server" type="NetworkCommissioningStatusEnum" writable="false">
      <access op="read" privilege="administer"/>
      <description>LastNetworkingStatus</description>
    </attribute>
    <attribute code="0x0006" define="LAST_NETWORK_ID" isNullable="true" length="32" optional="false" side="server" type="octet_string" writable="false">
      <access op="read" privilege="administer"/>
      <description>LastNetworkID</description>
    </attribute>
    <attribute code="0x0007" define="LAST_CONNECT_ERROR_VALUE" isNullable="true" optional="false" side="server" type="int32s" writable="false">
      <access op="read" privilege="administer"/>
      <description>LastConnectErrorValue</description>
    </attribute>
    <attribute apiMaturity="provisional" code="0x0008" define="SUPPORTED_WIFI_BANDS" entryType="WiFiBandEnum" optional="true" side="server" type="ARRAY" writable="false">
      <description>SupportedWiFiBands</description>
    </attribute>
    <attribute apiMaturity="provisional" code="0x0009" define="SUPPORTED_THREAD_FEATURES" optional="true" side="server" type="ThreadCapabilitiesBitmap" writable="false">
      <description>SupportedThreadFeatures</description>
    </attribute>
    <attribute apiMaturity="provisional" code="0x000A" define="THREAD_VERSION" optional="true" side="server" type="int16u" writable="false">
      <description>ThreadVersion</description>
    </attribute>
    <client init="false" tick="false">true</client>
    <code>0x0031</code>
    <command cli="chip network_commissioning scannetworks" code="0x00" name="ScanNetworks" optional="false" response="ScanNetworksResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg isNullable="true" length="32" name="SSID" optional="true" type="octet_string"/>
      <arg name="Breadcrumb" optional="true" type="int64u"/>
      <description>Detemine the set of networks the device sees as available.</description>
    </command>
    <command cli="chip network_commissioning scannetworksresponse" code="0x01" name="ScanNetworksResponse" optional="false" source="server">
      <arg name="NetworkingStatus" type="NetworkCommissioningStatusEnum"/>
      <arg name="DebugText" optional="true" type="char_string"/>
      <arg array="true" name="WiFiScanResults" optional="true" type="WiFiInterfaceScanResultStruct"/>
      <arg array="true" name="ThreadScanResults" optional="true" type="ThreadInterfaceScanResultStruct"/>
      <description>Relay the set of networks the device sees as available back to the client.</description>
    </command>
    <command cli="chip network_commissioning addorupdatewifinetwork" code="0x02" name="AddOrUpdateWiFiNetwork" optional="true" response="NetworkConfigResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg length="32" name="SSID" type="octet_string"/>
      <arg length="64" name="Credentials" type="octet_string"/>
      <arg name="breadcrumb" optional="true" type="int64u"/>
      <description>Add or update the credentials for a given Wi-Fi network.</description>
    </command>
    <command cli="chip network_commissioning addorupdatethreadnetwork" code="0x03" name="AddOrUpdateThreadNetwork" optional="true" response="NetworkConfigResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg length="254" name="OperationalDataset" type="octet_string"/>
      <arg name="Breadcrumb" optional="true" type="int64u"/>
      <description>Add or update the credentials for a given Thread network.</description>
    </command>
    <command cli="chip network_commissioning removenetwork" code="0x04" name="RemoveNetwork" optional="false" response="NetworkConfigResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg length="32" name="NetworkID" type="octet_string"/>
      <arg name="Breadcrumb" optional="true" type="int64u"/>
      <description>Remove the definition of a given network (including its credentials).</description>
    </command>
    <command cli="chip network_commissioning addwifiresponse" code="0x05" name="NetworkConfigResponse" optional="true" source="server">
      <arg name="NetworkingStatus" type="NetworkCommissioningStatusEnum"/>
      <arg length="512" name="DebugText" optional="true" type="char_string"/>
      <arg name="NetworkIndex" optional="true" type="int8u"/>
      <description>Response command for various commands that add/remove/modify network credentials.</description>
    </command>
    <command cli="chip network_commissioning connectnetwork" code="0x06" name="ConnectNetwork" optional="false" response="ConnectNetworkResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg length="32" name="NetworkID" type="octet_string"/>
      <arg name="Breadcrumb" optional="true" type="int64u"/>
      <description>Connect to the specified network, using previously-defined credentials.</description>
    </command>
    <command cli="chip network_commissioning connectnetworkresponse" code="0x07" name="ConnectNetworkResponse" optional="false" source="server">
      <arg name="NetworkingStatus" type="NetworkCommissioningStatusEnum"/>
      <arg name="DebugText" optional="true" type="char_string"/>
      <arg isNullable="true" name="ErrorValue" type="int32s"/>
      <description>Command that indicates whether we have succcessfully connected to a network.</description>
    </command>
    <command cli="chip network_commissioning connectnetwork" code="0x08" name="ReorderNetwork" optional="false" response="NetworkConfigResponse" source="client">
      <access op="invoke" privilege="administer"/>
      <arg length="32" name="NetworkID" type="octet_string"/>
      <arg name="NetworkIndex" type="int8u"/>
      <arg name="Breadcrumb" optional="true" type="int64u"/>
      <description>Modify the order in which networks will be presented in the Networks attribute.</description>
    </command>
    <define>NETWORK_COMMISSIONING_CLUSTER</define>
    <description>Functionality to configure, enable, disable network credentials and access on a Matter device.</description>
    <domain>CHIP</domain>
    <name>Network Commissioning</name>
    <server init="false" tick="false">true</server>
  </cluster>
  <domain certifiable="true" dependsOn="zcl-1.0-07-5123-03" name="CHIP" spec="chip-0.7"/>
  <enum name="NetworkCommissioningStatusEnum" type="enum8">
    <cluster code="0x0031"/>
    <item name="Success" value="0x0"/>
    <item name="OutOfRange" value="0x1"/>
    <item name="BoundsExceeded" value="0x2"/>
    <item name="NetworkIDNotFound" value="0x3"/>
    <item name="DuplicateNetworkID" value="0x4"/>
    <item name="NetworkNotFound" value="0x5"/>
    <item name="RegulatoryError" value="0x6"/>
    <item name="AuthFailure" value="0x7"/>
    <item name="UnsupportedSecurity" value="0x8"/>
    <item name="OtherConnectionFailure" value="0x9"/>
    <item name="IPV6Failed" value="0xa"/>
    <item name="IPBindFailed" value="0xb"/>
    <item name="UnknownError" value="0xc"/>
  </enum>
  <enum name="WiFiBandEnum" type="enum8">
    <cluster code="0x0031"/>
    <item name="2G4" value="0x0"/>
    <item name="3G65" value="0x1"/>
    <item name="5G" value="0x2"/>
    <item name="6G" value="0x3"/>
    <item name="60G" value="0x4"/>
    <item name="1G" value="0x5"/>
  </enum>
  <struct name="WiFiInterfaceScanResultStruct">
    <cluster code="0x0031"/>
    <item name="Security" type="WiFiSecurityBitmap"/>
    <item length="32" name="SSID" type="octet_string"/>
    <item length="6" name="BSSID" type="octet_string"/>
    <item name="Channel" type="int16u"/>
    <item name="WiFiBand" type="WiFiBandEnum"/>
    <item name="RSSI" type="int8s"/>
  </struct>
  <struct name="ThreadInterfaceScanResultStruct">
    <cluster code="0x0031"/>
    <item name="PanId" type="int16u"/>
    <item name="ExtendedPanId" type="int64u"/>
    <item length="16" name="NetworkName" type="char_string"/>
    <item name="Channel" type="int16u"/>
    <item name="Version" type="int8u"/>
    <item length="8" name="ExtendedAddress" type="octet_string"/>
    <item name="RSSI" type="int8s"/>
    <item name="LQI" type="int8u"/>
  </struct>
  <struct name="NetworkInfoStruct">
    <cluster code="0x0031"/>
    <item length="32" name="NetworkID" type="octet_string"/>
    <item name="Connected" type="boolean"/>
  </struct>
</configurator>
