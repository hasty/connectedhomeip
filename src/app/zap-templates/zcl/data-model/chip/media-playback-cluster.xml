<?xml version="1.0"?>
<configurator>
  <bitmap name="Feature" type="bitmap32">
    <cluster code="0x0506"/>
    <field mask="0x1" name="AdvancedSeek"/>
    <field mask="0x2" name="VariableSpeed"/>
  </bitmap>
  <cluster>
    <attribute code="0x0000" default="0x00" define="MEDIA_PLAYBACK_STATE" max="0x03" min="0x00" optional="false" side="server" type="PlaybackStateEnum" writable="false">CurrentState</attribute>
    <attribute code="0x0001" default="0x00" define="MEDIA_PLAYBACK_START_TIME" isNullable="true" min="0x00" optional="true" side="server" type="epoch_us" writable="false">StartTime</attribute>
    <attribute code="0x0002" default="0" define="MEDIA_PLAYBACK_DURATION" isNullable="true" min="0x00" optional="true" side="server" type="int64u" writable="false">Duration</attribute>
    <attribute code="0x0003" define="MEDIA_PLAYBACK_PLAYBACK_POSITION" isNullable="true" optional="true" side="server" type="PlaybackPositionStruct" writable="false">SampledPosition</attribute>
    <attribute code="0x0004" default="0" define="MEDIA_PLAYBACK_PLAYBACK_SPEED" min="0x00" optional="true" side="server" type="single" writable="false">PlaybackSpeed</attribute>
    <attribute code="0x0005" define="MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_END" isNullable="true" min="0x00" optional="true" side="server" type="int64u" writable="false">SeekRangeEnd</attribute>
    <attribute code="0x0006" define="MEDIA_PLAYBACK_PLAYBACK_SEEK_RANGE_START" isNullable="true" min="0x00" optional="true" side="server" type="int64u" writable="false">SeekRangeStart</attribute>
    <client init="false" tick="false">true</client>
    <code>0x0506</code>
    <command code="0x00" name="Play" optional="false" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL play media.</description>
    </command>
    <command code="0x01" name="Pause" optional="false" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL pause media.</description>
    </command>
    <command code="0x02" name="Stop" optional="false" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL stop media. User experience is context-specific. This will often navigate the user back to the location where media was originally launched.</description>
    </command>
    <command code="0x03" name="StartOver" optional="true" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL Start Over with the current media playback item.</description>
    </command>
    <command code="0x04" name="Previous" optional="true" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL cause the handler to be invoked for "Previous". User experience is context-specific. This will often Go back to the previous media playback item.</description>
    </command>
    <command code="0x05" name="Next" optional="true" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL cause the handler to be invoked for "Next". User experience is context-specific. This will often Go forward to the next media playback item.</description>
    </command>
    <command code="0x06" name="Rewind" optional="true" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL Rewind through media. Different Rewind speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).</description>
    </command>
    <command code="0x07" name="FastForward" optional="true" response="PlaybackResponse" source="client">
      <description>Upon receipt, this SHALL Advance through media. Different FF speeds can be used on the TV based upon the number of sequential calls to this function. This is to avoid needing to define every speed now (multiple fast, slow motion, etc).</description>
    </command>
    <command code="0x08" name="SkipForward" optional="true" response="PlaybackResponse" source="client">
      <arg name="DeltaPositionMilliseconds" type="int64u"/>
      <description>Upon receipt, this SHALL Skip forward in the media by the given number of seconds, using the data as follows:</description>
    </command>
    <command code="0x09" name="SkipBackward" optional="true" response="PlaybackResponse" source="client">
      <arg name="DeltaPositionMilliseconds" type="int64u"/>
      <description>Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:</description>
    </command>
    <command code="0x0B" name="Seek" optional="true" response="PlaybackResponse" source="client">
      <arg name="position" type="int64u"/>
      <description>Upon receipt, this SHALL Skip backward in the media by the given number of seconds, using the data as follows:</description>
    </command>
    <command code="0x0A" name="PlaybackResponse" optional="false" source="server">
      <arg name="Status" type="MediaPlaybackStatusEnum"/>
      <arg name="Data" optional="true" type="char_string"/>
      <description>This command SHALL be generated in response to various Playback Request commands.</description>
    </command>
    <define>MEDIA_PLAYBACK_CLUSTER</define>
    <description>This cluster provides an interface for controlling Media Playback (PLAY, PAUSE, etc) on a media device such as a TV or Speaker.</description>
    <domain>Media</domain>
    <globalAttribute code="0xFFFC" side="server" value="0"/>
    <name>Media Playback</name>
    <server init="false" tick="false">true</server>
  </cluster>
  <domain name="CHIP"/>
  <enum name="PlaybackStateEnum" type="enum8">
    <cluster code="0x0506"/>
    <item name="Playing" value="0x00"/>
    <item name="Paused" value="0x01"/>
    <item name="NotPlaying" value="0x02"/>
    <item name="Buffering" value="0x03"/>
  </enum>
  <enum name="MediaPlaybackStatusEnum" type="enum8">
    <cluster code="0x0506"/>
    <item name="Success" value="0x00"/>
    <item name="InvalidStateForCommand" value="0x01"/>
    <item name="NotAllowed" value="0x02"/>
    <item name="NotActive" value="0x03"/>
    <item name="SpeedOutOfRange" value="0x04"/>
    <item name="SeekOutOfRange" value="0x05"/>
  </enum>
  <struct name="PlaybackPositionStruct">
    <cluster code="0x0506"/>
    <item name="UpdatedAt" type="epoch_us"/>
    <item isNullable="true" name="Position" type="int64u"/>
  </struct>
</configurator>
